# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Set ENV
      run: |
          #TAG_NAME="v1.0.${GITHUB_RUN_NUMBER}"
          echo "TAG_NAME=v1.0.${GITHUB_RUN_NUMBER}" >> $GITHUB_ENV
          echo "DOCKER_TAG=${TAG_NAME}" >> $GITHUB_ENV
          echo "REPO=kubanaking/webapp" >> $GITHUB_ENV
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
          context: .
          push: true
          tags: |
            ${{ env.REPO }}:${{ env.DOCKER_TAG }}
    - name: Debug - Check if PAT is set
      run: |
          echo "PAT2 exists: ${{ secrets.PAT2 != '' }}"
    - name: Checkout the Helm chart repo
      uses: actions/checkout@v3
      with:
          repository: theamirocohen/helm_py_bg_color
          token: ${{ secrets.PAT2 }}
          path: helm_py_bg_color
    - name: Create tag and update file
      run: |
          echo "Updating image.tag to ${TAG_NAME}"
          yq eval ".image.tag = \"$TAG_NAME\"" -i helm_py_bg_color/values.yaml
    - name: Set up Git
      run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
    - name: Commit and push
      working-directory: helm_py_bg_color
      run: |
          git add .
          git commit -m "test values"
          git push

